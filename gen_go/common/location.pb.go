// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: common/location.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Countries int32

const (
	Countries_COUNTRY_UNSPECIFIED Countries = 0
	Countries_KOREA_US            Countries = 1
)

// Enum value maps for Countries.
var (
	Countries_name = map[int32]string{
		0: "COUNTRY_UNSPECIFIED",
		1: "KOREA_US",
	}
	Countries_value = map[string]int32{
		"COUNTRY_UNSPECIFIED": 0,
		"KOREA_US":            1,
	}
)

func (x Countries) Enum() *Countries {
	p := new(Countries)
	*p = x
	return p
}

func (x Countries) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Countries) Descriptor() protoreflect.EnumDescriptor {
	return file_common_location_proto_enumTypes[0].Descriptor()
}

func (Countries) Type() protoreflect.EnumType {
	return &file_common_location_proto_enumTypes[0]
}

func (x Countries) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Countries.Descriptor instead.
func (Countries) EnumDescriptor() ([]byte, []int) {
	return file_common_location_proto_rawDescGZIP(), []int{0}
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Country       Countries              `protobuf:"varint,1,opt,name=country,proto3,enum=common.Countries" json:"country,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_common_location_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_common_location_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_common_location_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetCountry() Countries {
	if x != nil {
		return x.Country
	}
	return Countries_COUNTRY_UNSPECIFIED
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

var File_common_location_proto protoreflect.FileDescriptor

const file_common_location_proto_rawDesc = "" +
	"\n" +
	"\x15common/location.proto\x12\x06common\"K\n" +
	"\bLocation\x12+\n" +
	"\acountry\x18\x01 \x01(\x0e2\x11.common.CountriesR\acountry\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city*2\n" +
	"\tCountries\x12\x17\n" +
	"\x13COUNTRY_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bKOREA_US\x10\x01B&Z$github.com/becash/apis/gen_go/commonb\x06proto3"

var (
	file_common_location_proto_rawDescOnce sync.Once
	file_common_location_proto_rawDescData []byte
)

func file_common_location_proto_rawDescGZIP() []byte {
	file_common_location_proto_rawDescOnce.Do(func() {
		file_common_location_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_location_proto_rawDesc), len(file_common_location_proto_rawDesc)))
	})
	return file_common_location_proto_rawDescData
}

var file_common_location_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_location_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_location_proto_goTypes = []any{
	(Countries)(0),   // 0: common.Countries
	(*Location)(nil), // 1: common.Location
}
var file_common_location_proto_depIdxs = []int32{
	0, // 0: common.Location.country:type_name -> common.Countries
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_location_proto_init() }
func file_common_location_proto_init() {
	if File_common_location_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_location_proto_rawDesc), len(file_common_location_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_location_proto_goTypes,
		DependencyIndexes: file_common_location_proto_depIdxs,
		EnumInfos:         file_common_location_proto_enumTypes,
		MessageInfos:      file_common_location_proto_msgTypes,
	}.Build()
	File_common_location_proto = out.File
	file_common_location_proto_goTypes = nil
	file_common_location_proto_depIdxs = nil
}
