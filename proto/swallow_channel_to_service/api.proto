syntax = "proto3";

package swallow_channel_to_service;

import "common/filter_id.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "swallow_channel_to_service/messages.proto";
option go_package = "github.com/becash/apis/gen_go/swallow_channel_to_service";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Swallow Service API Channel, Direction from External source ( is client ) to US service ( server )";
    version: "0.1";
    description: "HTTP/JSON API for Swallow service";
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

service ServiceToSwallow {
  // Get on product by some field
  rpc GetAvailabilityOfProduct(ProductAvailabilitiesRequest) returns (Availabilities) {
    option (google.api.http) = {get: "/product-availabilities/{product_id}"};
  }
  rpc GetProduct(common.ItemIdInt32) returns (Product) {
    option (google.api.http) = {get: "/product/{id}"};
  }
  rpc GetProducts(ProductsRequest) returns (Products) {
    option (google.api.http) = {get: "/products/"};
  }
}
