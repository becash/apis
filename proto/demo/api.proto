syntax = "proto3";

package demo;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/becash/apis/gen_go/demo";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Demo Service API";
    version: "1.0.0";
    description: "HTTP/JSON API for Demo service via gRPC-Gateway";
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

// use from common
message ItemIdInt32 {
  // Filter documents by ID
  int32 id = 1;
}


message Item {
  // item ID
  int32 id = 1 ;
  // item description
  string description = 2;
}

service ServiceDemo {
  rpc GetOne(ItemIdInt32) returns (Item) {
    option (google.api.http) = {get: "/v1/item/{id}"};
  }
}
